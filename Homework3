bash
cd
git clone https://github.com/ctb/2017-ucdavis-igg201b.git

#install edgeR.R 
sudo Rscript --no-save ~/2017-ucdavis-igg201b/lab7/install-edgeR.R

#install salmon
cd
curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v0.8.0/Salmon-0.8.0_linux_x86_64.tar.gz
tar xzf Salmon-0.8.0_linux_x86_64.tar.gz 
export PATH=$PATH:$HOME/Salmon-latest_linux_x86_64/bin

#make a working directory called yeast
mkdir yeast
cd yeast

#download 6 Schurch data files from lab 8 plus 4 new files
#mutant
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458500/ERR458500.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458501/ERR458501.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458502/ERR458502.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458511/ERR458511.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458510/ERR458510.fastq.gz

#wildtype
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458493/ERR458493.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458494/ERR458494.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458495/ERR458495.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458499/ERR458499.fastq.gz
curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR458/ERR458498/ERR458498.fastq.gz

#download the yeast reference transcriptome
curl -O http://downloads.yeastgenome.org/sequence/S288C_reference/orf_dna/orf_coding.fasta.gz

#index the yeast reference transcriptome
salmon index --index yeast_orfs --type quasi --transcripts orf_coding.fasta.gz

#run salmon on all 10 samples
for i in *.fastq.gz
 do
     salmon quant -i yeast_orfs --libType U -r $i -o $i.quant --seqBias --gcBias
 done

#collect all the sample counts using python
curl -L -O https://github.com/ngs-docs/2016-aug-nonmodel-rnaseq/raw/master/files/gather-counts.py
 python2 gather-counts.py

#run edgeR.R
library("edgeR")

files <- c(
"ERR458493.fastq.gz.quant.counts",
"ERR458494.fastq.gz.quant.counts",
"ERR458495.fastq.gz.quant.counts",
"ERR458498.fastq.gz.quant.counts",
"ERR458499.fastq.gz.quant.counts",
"ERR458500.fastq.gz.quant.counts",
"ERR458501.fastq.gz.quant.counts",
"ERR458502.fastq.gz.quant.counts",
"ERR458510.fastq.gz.quant.counts",
"ERR458511.fastq.gz.quant.counts"
)

labels=c("A", "B", "C", "W", "X", "D", "E", "F", "Y", "Z")

data <- readDGE(files)

print(data)

###

group <- c(rep("WT", 5), rep("MUT", 5))

dge = DGEList(counts=data, group=group)
dge <- estimateCommonDisp(dge)
dge <- estimateTagwiseDisp(dge)

# make an MA-plot
et <- exactTest(dge, pair=c("wt", "mut"))
etp <- topTags(et, n=100000)
etp$table$logFC = -etp$table$logFC
pdf("yeast-edgeR-MA-plot.pdf")
plot(
  etp$table$logCPM,
  etp$table$logFC,
  xlim=c(-3, 20), ylim=c(-12, 12), pch=20, cex=.3,
  col = ifelse( etp$table$FDR < .2, "red", "black" ) )
dev.off()

# plot MDS
pdf("yeast-edgeR-MDS.pdf")
plotMDS(dge, labels=labels)
dev.off()

# output CSV for 0-6 hr
write.csv(etp$table, "yeast-edgeR.csv")


# Error in is.data.frame(x) : object 'etp' not found
# I keep getting this error and cannot get a CSV output
